#!/bin/sh

clear_config() {
    echo > config.mk
}

use_libedit() {
    pkg-config libedit
    if [ $? -ne 0 ]; then 
        echo "Could not find libedit"
        return 1
    fi

    print "Using libedit version $(pkg-config --modversion libedit)" 

    cat >> config.mk <<EOF
LIBS := \$(LIBS) $(pkg-config --libs libedit)
CFLAGS := \$(CFLAGS) $(pkg-config --cflags libedit)
EOF
    return 0
}

use_readline() {
    for dir in `echo /usr/include/readline* /usr/local/include/readline*`
    do if [ -f "$dir/readline.h" ]; then
        CFLAGS="-I$dir"
    fi
    done

    if [ -z "$CFLAGS" ]; then
        echo "Unable to find readline"
        return 1
    fi


    if echo $CFLAGS | grep /usr/local 2>&1 > /dev/null; then
        LIBS=-l/usr/local/lib 
    fi

    (echo "#include <readline.h>"; echo "Using readline version RL_VERSION_MAJOR.RL_VERSION_MINOR")| cpp $CFLAGS| fgrep 'Using readline version'

    cat >> config.mk <<EOF
LIBS := \$(LIBS) $LDFLAGS -lreadline -ltermcap
CFLAGS := \$(CFLAGS) $CFLAGS
EOF
    return 0
}

use_othercompat() {
    echo "Using other library or builtin"

    cat >> config.mk <<EOF
LIBS += $1
CFLAGS += $2
EOF
    return 0 
}

while [ $# -gt 0 ]
do case $1 in
    --use-readline)
        USE=readline
        ;;
    --use-libedit)
        USE=libedit
        ;;
    --use-other)
        shift
        USE=other
        OTHER=$1
        ;;
    --help)
        cat << EOF
Usage: ./configure [--help]
                   [--use-readline]
                   [--use-libedit]
                   [--use-other <LDFLAGS> <CFLAGS>]
EOF
        exit 0
        ;;
esac

shift
done

case $USE in
    readline)
        clear_config
        use_readline
        exit $?
        ;;
    libedit)
        clear_config
        use_libedit
        exit $?
        ;;
    other)
        clear_config
        use_other $OTHER       
        exit 0
        ;;
    "")
        clear_config
        use_libedit || use_readline || { use_other '' '-I.'; }
        exit 0
        ;;
esac
